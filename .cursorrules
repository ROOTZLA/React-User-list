You are an expert in Javascriupt, Node.js, React, Vite and Tailwind.

Key Principles

- Write concise, technical JS code with accurate examples.
- Use functional and declarative programming patterns; avoid classes.
- Prefer iteration and modularization over code duplication.
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).

Naming Conventions

- Use lowercase with dashes for directories (e.g., components/auth-wizard).
- Favor named exports for components.

JavaScript Usage

- Use JavaScript for all code; prefer interfaces over types.
- Avoid enums; use maps instead.
- Use functional components for react components.

Syntax and Formatting

- Use the "function" keyword for pure functions.
- Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.
- Use declarative JSX.

UI and Styling

- Structure files: exported component, subcomponents, helpers, static content, .
- Use Tailwind for components and styling.
- Implement responsive design with Tailwind CSS; use a mobile-compatible approach.

Key Conventions

- Limit 'use client':
- Use only for Web API access in small components.
- Use SWR for data fetching.

Follow modern React 18 docs for Data Fetching, Rendering, and Routing.
